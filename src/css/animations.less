@import "keyframes";

@push: cubic-bezier(0.37, 0.37, 0.12, 1.01);
@pull: cubic-bezier(0.65, 0.29, 0.41, 1.07);

:root {
  --sequence-steps: 0.1s;
  --timing-function: @pull;
}

span {
  &.animate,
  &.animate--js {
    display: inline-block;
  }
}

.animate {
  -webkit-animation-name: var(--animation, fade);
  -webkit-animation-duration: var(--duration, 1s);
  -webkit-animation-timing-function: var(--timing-function, linear);
  -webkit-animation-delay: var(--delay, 0s);
  -webkit-animation-direction: var(--direction, normal);
  -webkit-animation-fill-mode: var(--fill-mode, both);
  -webkit-animation-iteration-count: var(--iteration-count, 1);
  -webkit-animation-play-state: var(--play-state, running);

  animation-name: var(--animation, fade);
  animation-duration: var(--duration, 1s);
  animation-timing-function: var(--timing-function, linear);
  animation-delay: var(--delay, 0s);
  animation-direction: var(--direction, normal);
  animation-fill-mode: var(--fill-mode, both);
  animation-iteration-count: var(--iteration-count, 1);
  animation-play-state: var(--play-state, running);
}

.animate--js {
  -webkit-animation-duration: var(--duration, 1s);
  -webkit-animation-timing-function: var(--timing-function, linear);
  -webkit-animation-delay: var(--delay, 0s);
  -webkit-animation-direction: var(--direction, normal);
  -webkit-animation-iteration-count: var(--iteration-count, 1);
  -webkit-animation-play-state: var(--play-state, paused);

  animation-duration: var(--duration, 1s);
  animation-timing-function: var(--timing-function, linear);
  animation-delay: var(--delay, 0s);
  animation-direction: var(--direction, normal);
  animation-iteration-count: var(--iteration-count, 1);
  animation-play-state: var(--play-state, paused);
  opacity: 0;

  &.in {
    -webkit-animation-name: var(--animation, fade);
    -webkit-animation-fill-mode: var(--fill-mode, both);
    -webkit-animation-play-state: var(--play-state, running);

    animation-name: var(--animation, fade);
    animation-fill-mode: var(--fill-mode, both);
    animation-play-state: var(--play-state, running);
    opacity: 1;
  }
}

// Pre-defined states
.loop {
  --timing-function: linear;
  --direction: normal;
  --fill-mode: none;
  --iteration-count: infinite;
}
.pulse {
  --timing-function: cubic-bezier(0.65, 0.05, 0.36, 1);
  --direction: alternate;
  --fill-mode: none;
  --iteration-count: infinite;
}

// Durations
.duration-xs  { --duration: 0.25s; }
.duration-s   { --duration: 0.50s; }
.duration-m   { --duration: 1.00s; }
.duration-l   { --duration: 2.00s; }
.duration-xl  { --duration: 5.00s; }
.reset-duration { --duration: revert; }

// Delays
.delay-xs { --delay: 0.10s; }
.delay-s  { --delay: 0.25s; }
.delay-m  { --delay: 0.50s; }
.delay-l  { --delay: 1.00s; }
.delay-xl { --delay: 2.00s; }
.reset-delay { --delay: revert; }

// Timing functions
.linear       { --timing-function: linear; }
.ease         { --timing-function: ease; }
.ease-in      { --timing-function: ease-in; }
.ease-out     { --timing-function: ease-out; }
.cubic-in     { --timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
.cubic-out    { --timing-function: cubic-bezier(0.22, 0.61, 0.36, 1); }
.cubic-in-out { --timing-function: cubic-bezier(0.65, 0.05, 0.36, 1); }
.push         { --timing-function: @push; }
.pull         { --timing-function: @pull; }

// Directions
.reverse            { --direction: reverse; }
.alternate          { --direction: alternate; }
.alternate-reverse  { --direction: alternate-reverse; }
.reset-direction    { --direction: revert; }

// Fill modes
.forwards   { --fill-mode: forwards; }
.backwards  { --fill-mode: backwards; }
.both       { --fill-mode: both; }
.reset-fill-mode { --fill-mode: revert; }

// Iteration counts
.once     { --iteration-count: 1; }
.infinite { --iteration-count: infinite; }
.reset-iteration-count { --iteration-count: revert; }

// Play states
.paused   { --play-state: paused; }
.running  { --play-state: running; }
.reset-play-state { --play-state: revert; }

.reset {
  --name: revert;
  --duration: revert;
  --timing-function: revert;
  --delay: revert;
  --direction: revert;
  --fill-mode: revert;
  --iteration-count: revert;
  --play-state: revert;
}

// Sequence
.animate.sequence,
.animate--js.sequence {
  -webkit-animation: none;
  animation: none;

  > span {
    display: inline-block;
  }
  > * {
    -webkit-animation-name: var(--animation, fade);
    -webkit-animation-duration: var(--duration, 1s);
    -webkit-animation-timing-function: var(--timing-function, linear);
    -webkit-animation-delay: var(--delay, 0s);
    -webkit-animation-direction: var(--direction, normal);
    -webkit-animation-iteration-count: var(--iteration-count, 1);

    animation-name: var(--animation, fade);
    animation-duration: var(--duration, 1s);
    animation-timing-function: var(--timing-function, linear);
    animation-delay: var(--delay, 0s);
    animation-direction: var(--direction, normal);
    animation-iteration-count: var(--iteration-count, 1);

    &:nth-child(1) { --delay: 0.00s; }
    &:nth-child(2) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 1)'; }
    &:nth-child(3) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 2)'; }
    &:nth-child(4) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 3)'; }
    &:nth-child(5) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 4)'; }
    &:nth-child(6) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 5)'; }
    &:nth-child(7) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 6)'; }
    &:nth-child(8) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 7)'; }
    &:nth-child(9) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 8)'; }
    &:nth-child(10) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 9)'; }
    &:nth-child(11) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 10)'; }
    &:nth-child(12) { --delay: ~'calc(var(--sequence-steps, 0.1s) * 11)'; }
  }
}

.animate--js.sequence {
  > * {
    -webkit-animation-play-state: var(--play-state, paused);
    animation-play-state: var(--play-state, paused);
    opacity: 0;
  }
  &.in > * {
    -webkit-animation-name: var(--animation, fade);
    -webkit-animation-fill-mode: var(--fill-mode, both);
    -webkit-animation-play-state: var(--play-state, running);

    animation-name: var(--animation, fade);
    animation-fill-mode: var(--fill-mode, both);
    animation-play-state: var(--play-state, running);
    opacity: 1;
  }
}

// Animations
.fade             { --animation: fade; }

.zoomIn           { --animation: zoomIn; }
.zoomInFade       { --animation: zoomInFade; }
.zoomOut          { --animation: zoomOut; }
.zoomOutFade      { --animation: zoomOutFade; }

.moveTop          { --animation: moveTop; }
.moveTopFull      { --animation: moveTopFull; }
.moveBottom       { --animation: moveBottom; }
.moveBottomFull   { --animation: moveBottomFull; }
.moveLeft         { --animation: moveLeft; }
.moveLeftFull     { --animation: moveLeftFull; }
.moveRight        { --animation: moveRight; }
.moveRightFull    { --animation: moveRightFull; }

.rotate           { --animation: rotater; }
.rotateX          { --animation: rotateX; }
.rotateY          { --animation: rotateY; }
.rotateQuarter    { --animation: rotateQuarter; }

.rotateHalf       { --animation: rotateHalf; }
.rotateXHalf      { --animation: rotateXHalf; }
.rotateYHalf      { --animation: rotateYHalf; }

.rotateFull       { --animation: rotateFull; }
.rotateYFull      { --animation: rotateYFull; }
.rotateXFull      { --animation: rotateXFull; }

.cutIn            { --animation: cutIn; }
.cutInSplit       { --animation: cutInSplit; }

.slideUp          { --animation: slideUp; }
.slideDown        { --animation: slideDown; }

.blur           { --animation: blur; }
.monochrome       { --animation: monochrome; }